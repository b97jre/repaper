# -*- snakemake-mode -*-
# Snakefile for running analysis of data in Treutlein et al, 2014
import os
import csv
import logging
import yaml
from snakemakelib.config import update_sml_config, get_sml_config, load_sml_config
from snakemakelib.bio.ngs.tools.sratools import get_metadata_list

SRAPROJECT = "SRP033209"
workdir: "."

# Load external configuration files
load_sml_config()

# Rule for creating sample directories and links. Here, sequence data
# is located two levels up in folder hierarchy, in folder data. I ran
# analyses in Treutlein/analysis/date, with sequencing data residing
# in Treutlein/data. Change at will.
datadir = os.path.abspath("../../data")
metadata = os.path.join(datadir, "{srp}_info.csv".format(srp=SRAPROJECT))
metadata_list = get_metadata_list(metadata)
update_sml_config({'bio.ngs.settings' : {'sampleinfo' : metadata}})

include: "/home/peru/lib/snakemakelib/rules/bio/ngs/tools/sratools.rules"
include: '/home/peru/lib/snakemakelib/workflows/bio/scrnaseq.workflow'

# Utility mapping from samplename to run; by chance only one run per sample
sample2run = {row["SampleName"]:row["Run"] for row in metadata_list}

def _get_run(wildcards):
    return os.path.join(datadir, sample2run[wildcards.prefix] + "_" + wildcards.read + ".fastq.gz")
    
rule link_fastq:
    """Link fastq files from input data directory to analysis directory.
    """
    input: fastq = _get_run
    output: fastq = os.path.join("{prefix}", "{prefix}_{read}.fastq.gz")
    shell: "ln -s {input.fastq} {output.fastq}"

ruleorder: link_fastq > sratools_fastq_dump
